<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Yuta のブログ</title><link>https://hiro20220528.github.io/posts/</link><description>Recent content in Posts on Yuta のブログ</description><generator>Hugo</generator><language>ja-jp</language><copyright>© 2025, Yuta</copyright><lastBuildDate>Thu, 10 Apr 2025 21:07:47 +0900</lastBuildDate><atom:link href="https://hiro20220528.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Building the Browser From Scratch</title><link>https://hiro20220528.github.io/posts/building-the-browser-from-scratch/</link><pubDate>Thu, 10 Apr 2025 21:07:47 +0900</pubDate><guid>https://hiro20220528.github.io/posts/building-the-browser-from-scratch/</guid><description>&lt;p>「作って学ぶ」ブラウザのしくみ を読んだ&lt;/p>
&lt;p>Amazonのリンクは&lt;a href="https://www.amazon.co.jp/dp/4297145464?ref=ppx_yo2ov_dt_b_fed_asin_title">こちら&lt;/a>&lt;/p>
&lt;p>以下に簡単に内容をまとめる&lt;/p>
&lt;!-- &lt;details>
&lt;summary>目次&lt;/summary>

- [1. ブラウザを知る](#chapter-1)
- [2. URLを分解する](#chapter-2)
- [3. HTTPを実装する](#chapter-3)
- [4. HTMLを解析する](#chapter-4)
- [5. CSSで装飾する](#chapter-5)
- [6. GUIを実装する](#chapter-6)
- [7. JavaScriptを実装する](#chapter-7)

&lt;/details> -->
&lt;details>
&lt;summary style="font-size: 1.5rem;" class="chapter-1"> 1. ブラウザを知る &lt;/summary>


&lt;p>まずは、ブラウザが画面を表示するまでの全体像をまとめる。&lt;/p>
&lt;ol>
&lt;li>ブラウザはまず、以下の流れでデータを取得する。&lt;/li>
&lt;/ol>
&lt;div class="mermaid">
sequenceDiagram
 participant ブラウザ
 participant DNSサーバ
 participant Webサーバ
 ブラウザ->>DNSサーバ: DNSクエリ（問い合わせ）の送信
 activate DNSサーバ
 DNSサーバ-->>ブラウザ: IPアドレスを返す
 deactivate DNSサーバ
 ブラウザ->>Webサーバ: HTTPリクエスト
 activate Webサーバ
 Webサーバ-->>ブラウザ: HTTPレスポンス
 deactivate Webサーバ
&lt;/div>
&lt;ol>
&lt;li>その次に、ブラウザは取得したデータ（HTTPレスポンス）を解析し、HTMLの部分を取り出す。&lt;/li>
&lt;/ol>
&lt;p>取得したHTTPレスポンスの例（HTTPはテキストベースのプロトコル）&lt;/p>
&lt;pre tabindex="0">&lt;code>HTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\n\n&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My First Web Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;This is a paragraph.&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Item 1&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Item 2&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Item 3&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>見やすいようにすると以下の形式となる&lt;/p></description></item><item><title>How to Create This Site</title><link>https://hiro20220528.github.io/posts/how-to-create-this-site/</link><pubDate>Sat, 15 Mar 2025 17:19:10 +0900</pubDate><guid>https://hiro20220528.github.io/posts/how-to-create-this-site/</guid><description>&lt;p>初投稿&lt;/p>
&lt;p>どのようにしてこのサイトを作成したのかを書き留めておく.&lt;/p>
&lt;p>このサイトは&lt;a href="https://gohugo.io/">Hugo&lt;/a>というGoのフレームワークを用いて作成されている.&lt;/p>
&lt;p>Hugoについては公式サイトを読んでほしい.&lt;/p>
&lt;p>Hugoのチュートリアルに沿ってプロジェクトを作成すると以下のディレクトリ構成になる.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-zsh" data-lang="zsh">&lt;span style="display:flex;">&lt;span>tree -L &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── README.md &lt;span style="color:#75715e"># 自分で追加した&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── archetypes &lt;span style="color:#75715e"># ページのテンプレートが入っている&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── content &lt;span style="color:#75715e"># 実際のページを入れる&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── hugo.toml &lt;span style="color:#75715e"># 設定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── public &lt;span style="color:#75715e"># buildしたファイルがここに入る&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── themes &lt;span style="color:#75715e"># 使用するテーマがここに入る&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>テーマはHugoの公式サイトから探せる. どうやってテーマを適用するのかは他のサイトにあるので省略する.&lt;/p>
&lt;p>このサイトはGitHub Pagesとして公開されている. どのようにして公開しているのかを説明する.&lt;/p>
&lt;p>GitHub Pagesで公開するには, &lt;code>自分のGitHubのアカウント名.github.io&lt;/code>でレポジトリーを作成する.
Hugoでサイト作成後, &lt;code>hugo build&lt;/code>などのコマンドを用いてpublic/にサイトを準備する. そして, public直下のデータを全てルートディレクトリに持ってくると公開できる. 従って別ブランチでサイト執筆を行い, mainブランチにはpublic/のデータ全てがあるようにするべきである. このサイトではGitHub Actionsを用いてdevelopブランチで執筆を行い, リモートにpushされると自動的に適応するようになっている. 以下で詳しく説明する.&lt;/p>
&lt;ul>
&lt;li>&lt;code>main&lt;/code>ブランチ &amp;hellip; public/下のファイルが全てある&lt;/li>
&lt;li>&lt;code>develop&lt;/code>ブランチ &amp;hellip; このブランチで作業を行い. リモートにpushすると自動でmainにpublic/下のファイルだけ移動するようになっている.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>公開するにあたって詰まったところ&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>hugo.tomlの内容, avatorにgravatarで登録した私用のメアドを直接入れるとメアドが漏洩するため, github actions内でsecretsとして取得させた. しかし, その値もMD5かなんかのハッシュ化されているみたいで何度もアタックされると特定されるみたいだが, 今回はそこまでして特定する人いないだろうということで放置&lt;/li>
&lt;li>hugo.tomlのbaseURLの部分, github pagesで公開する場合は自分のアカウント名.github.io/にしておかないとcssなどの読み込みがうまくいかない.&lt;/li>
&lt;li>ページの作り方. &lt;code>hugo new content content/posts/&amp;lt;ページ名&amp;gt;.md&lt;/code>このコマンドでは新たにブログ記事を執筆するページが作成されるが, postsで作らないとブログ記事として認識されないようだ. 詳しく調べる必要があるが&amp;hellip;&lt;/li>
&lt;/ul></description></item></channel></rss>